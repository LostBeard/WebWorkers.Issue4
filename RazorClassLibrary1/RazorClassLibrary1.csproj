<Project Sdk="Microsoft.NET.Sdk.Razor">

	<PropertyGroup>
		<TargetFrameworks>net8.0;net9.0</TargetFrameworks>
		<Nullable>enable</Nullable>
		<ImplicitUsings>enable</ImplicitUsings>
	</PropertyGroup>

	<ItemGroup Condition=" '$(TargetFramework)' == 'net8.0' ">
		<PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly" Version="8.0.11" />
		<PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly.DevServer" Version="8.0.11" PrivateAssets="all" />
	</ItemGroup>

	<ItemGroup Condition=" '$(TargetFramework)' == 'net9.0' ">
		<PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly" Version="9.0.0" />
		<PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly.DevServer" Version="9.0.0" PrivateAssets="all" />
	</ItemGroup>

	<ItemGroup>
		<!--
			To demonstrate this bug, this RCL should reference the Nuget packaged RazorClassLibrary2 RCL
			
			Demo Bug use version 2.0.0 which uses:
			<StaticWebAssetBasePath>/</StaticWebAssetBasePath>
			
			Demo bug workaround use 3.0.0 which uses:
			<StaticWebAssetBasePath>/./</StaticWebAssetBasePath>
			
			!IMPORTANT! - The above workaround breaks debugging
			
			NOTE: RazorClassLibrary2 must be a Nuget package and not a referenced project to trigger the bug. It can be locally hosted.
		-->
		<PackageReference Include="RazorClassLibrary2" Version="2.0.0" />
	</ItemGroup>

	<ItemGroup>
		<SupportedPlatform Include="browser" />
	</ItemGroup>

</Project>
